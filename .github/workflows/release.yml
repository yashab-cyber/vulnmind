name: üöÄ Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        pip install -r requirements-dev.txt
        pytest
    
    - name: Build package
      run: |
        python -m build
    
    - name: Create Release Notes
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        
        # Generate release notes from changelog
        sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$ d' > release-notes.md
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: VulnMind v${{ env.VERSION }}
        body_path: release-notes.md
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
    
    - name: Build Docker image
      run: |
        docker build -t vulnmind:${{ env.VERSION }} .
        docker build -t vulnmind:latest .
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Push Docker images
      run: |
        docker tag vulnmind:${{ env.VERSION }} ${{ secrets.DOCKER_HUB_USERNAME }}/vulnmind:${{ env.VERSION }}
        docker tag vulnmind:latest ${{ secrets.DOCKER_HUB_USERNAME }}/vulnmind:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/vulnmind:${{ env.VERSION }}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/vulnmind:latest
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/
        asset_name: vulnmind-${{ env.VERSION }}-dist.tar.gz
        asset_content_type: application/gzip

  notify-community:
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: Notify Discord/Slack (if configured)
      run: |
        # Add notification webhook calls here if desired
        echo "üöÄ VulnMind v${{ env.VERSION }} has been released!"
        echo "üì¶ Available on PyPI: https://pypi.org/project/vulnmind/"
        echo "üê≥ Docker images updated"
        echo "üìã Release notes: https://github.com/yashab-cyber/vulnmind/releases"
